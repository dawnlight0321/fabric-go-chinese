
//<developer>
//    <name>linapex 曹一峰</name>
//    <email>linapex@163.com</email>
//    <wx>superexc</wx>
//    <qqgroup>128148617</qqgroup>
//    <url>https://jsq.ink</url>
//    <role>pku engineer</role>
//    <date>2019-03-16 19:40:23</date>
//</624456070349197312>

//Code generated by mockery v1.0.0. 不要编辑。

package mocks

import ledger "github.com/hyperledger/fabric/core/ledger"
import mock "github.com/stretchr/testify/mock"

//configHistoryRetriever是为configHistoryRetriever类型自动生成的模拟类型
type ConfigHistoryRetriever struct {
	mock.Mock
}

//collectionconfigat提供具有给定字段的模拟函数：blocknum、chaincodename
func (_m *ConfigHistoryRetriever) CollectionConfigAt(blockNum uint64, chaincodeName string) (*ledger.CollectionConfigInfo, error) {
	ret := _m.Called(blockNum, chaincodeName)

	var r0 *ledger.CollectionConfigInfo
	if rf, ok := ret.Get(0).(func(uint64, string) *ledger.CollectionConfigInfo); ok {
		r0 = rf(blockNum, chaincodeName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ledger.CollectionConfigInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64, string) error); ok {
		r1 = rf(blockNum, chaincodeName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

//mostrecentcollectionconfigbelow提供了一个具有给定字段的模拟函数：blocknum、chaincodename
func (_m *ConfigHistoryRetriever) MostRecentCollectionConfigBelow(blockNum uint64, chaincodeName string) (*ledger.CollectionConfigInfo, error) {
	ret := _m.Called(blockNum, chaincodeName)

	var r0 *ledger.CollectionConfigInfo
	if rf, ok := ret.Get(0).(func(uint64, string) *ledger.CollectionConfigInfo); ok {
		r0 = rf(blockNum, chaincodeName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ledger.CollectionConfigInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64, string) error); ok {
		r1 = rf(blockNum, chaincodeName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

